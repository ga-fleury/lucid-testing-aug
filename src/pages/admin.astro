---
/**
 * Admin Dashboard - Protected by Middleware
 * This page tests the middleware protection for protected pages
 */

// The middleware automatically adds user and isAuthenticated to locals
const { user, isAuthenticated } = Astro.locals;

// This should never happen due to middleware protection, but good to have as fallback
if (!isAuthenticated || !user) {
    console.warn('Admin page accessed without authentication - middleware may have failed');
    return Astro.redirect('/lucid/auth?return=' + encodeURIComponent(Astro.url.pathname));
}

console.info('Admin page accessed by authenticated user:', { userEmail: user.userEmail });
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Lucid Framework</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 2rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e5e7eb;
        }
        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        .user-badge {
            background: #10b981;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-weight: 500;
        }
        .logout-btn {
            background: #ef4444;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            text-decoration: none;
            font-weight: 500;
        }
        .logout-btn:hover {
            background: #dc2626;
        }
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        .dashboard-card {
            background: #f9fafb;
            padding: 1.5rem;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }
        .dashboard-card h3 {
            margin: 0 0 1rem 0;
            color: #1f2937;
        }
        .dashboard-card p {
            color: #6b7280;
            margin: 0 0 1rem 0;
        }
        .btn {
            background: #3b82f6;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            cursor: pointer;
            text-decoration: none;
            font-weight: 500;
            display: inline-block;
        }
        .btn:hover {
            background: #2563eb;
        }
        .middleware-info {
            background: #f0fdf4;
            border: 1px solid #bbf7d0;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 2rem;
        }
        .middleware-info h4 {
            color: #166534;
            margin: 0 0 0.5rem 0;
        }
        .middleware-info p {
            color: #166534;
            margin: 0;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <div class="header">
            <h1>üõ°Ô∏è Protected Admin Dashboard</h1>
            <div class="user-info">
                <span class="user-badge">üë§ {user.userEmail}</span>
                <a href="/lucid/auth/logout" class="logout-btn">Logout</a>
            </div>
        </div>

        <div class="middleware-info">
            <h4>‚úÖ Middleware Protection Active</h4>
            <p>This page is protected by server-side middleware. You can only see this because you're authenticated!</p>
        </div>

        <div class="dashboard-grid">
            <div class="dashboard-card">
                <h3>üöÄ Framework Management</h3>
                <p>Install, update, or remove the Lucid Framework from your Webflow sites.</p>
                <a href="/lucid/" class="btn">Manage Framework</a>
            </div>

            <div class="dashboard-card">
                <h3>üìä System Status</h3>
                <p>Check authentication status, environment variables, and system health.</p>
                <button class="btn" onclick="checkStatus()">Check Status</button>
            </div>

            <div class="dashboard-card">
                <h3>üîß Debug Tools</h3>
                <p>Debug session data, test API endpoints, and troubleshoot issues.</p>
                <button class="btn" onclick="debugSession()">Debug Session</button>
            </div>

            <div class="dashboard-card">
                <h3>üìö User Information</h3>
                <p><strong>Email:</strong> {user.userEmail}</p>
                <p><strong>Session ID:</strong> {user.sessionId}</p>
                <p><strong>Site ID:</strong> {user.siteId || 'Not specified'}</p>
            </div>
        </div>

        <div id="results" style="margin-top: 2rem;">
            <!-- Dynamic results will appear here -->
        </div>
    </div>

    <script>
        async function checkStatus() {
            try {
                const response = await fetch('/lucid/api/admin/status');
                const data = await response.json();
                
                document.getElementById('results').innerHTML = 
                    '<h3>System Status</h3><pre>' + 
                    JSON.stringify(data, null, 2) + '</pre>';
            } catch (error) {
                document.getElementById('results').innerHTML = 
                    '<h3>Error</h3><p style="color: #ef4444;">Failed to fetch status: ' + error.message + '</p>';
            }
        }

        async function debugSession() {
            try {
                const response = await fetch('/lucid/api/debug-session');
                const data = await response.json();
                
                document.getElementById('results').innerHTML = 
                    '<h3>Session Debug</h3><pre>' + 
                    JSON.stringify(data, null, 2) + '</pre>';
            } catch (error) {
                document.getElementById('results').innerHTML = 
                    '<h3>Error</h3><p style="color: #ef4444;">Failed to debug session: ' + error.message + '</p>';
            }
        }
    </script>
</body>
</html>